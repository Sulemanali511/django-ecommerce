"""
Django settings for ecommerce project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import braintree
from dotenv import load_dotenv
from django.utils.translation import gettext_lazy as _


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

load_dotenv(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '^)c9&3f@b6wlc(e_6-c4cqo*@#$9fmvq)k)(7oajatasoz%%%m'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = []

ADMINS = (
    ('flavien', 'flavienhgs@gmail.com'),
)

MANAGERS = ADMINS

AUTH_USER_MODEL = 'accounts.User'
AUTHENTICATION_BACKENDS = (
    'accounts.backends.MyAuthBackend', 'django.contrib.auth.backends.ModelBackend',
)

SITE_NAME = 'e-market'
SITE_DESCRIPTION = 'Votre boutique en ligne'
META_KEYWORDS = 'Shopping, ecommerce, accessories, TV, Audio, smartphone, Mode'
META_DESCRIPTION = 'ecommerce shopping'

# Cookie name. This can be whatever you want.
SESSION_COOKIE_NAME = 'sessionid'

# The module to store sessions data.
SESSION_ENGINE = 'django.contrib.sessions.backends.db'

# Application definition

INSTALLED_APPS = [
    # ajout application de coupons

    'suit',
    'accounts.apps.AccountsConfig',
    'django.contrib.sitemaps',
    'django.contrib.admindocs',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.humanize',

    # ajout application shop
    'shop.apps.ShopConfig',

    # ajout application panier
    'panier.apps.PanierConfig',

    # ajout commandes des clients
    'commandes.apps.CommandesConfig',

    # ajout application de paiement
    'payment.apps.PaymentConfig',

    # ajout application de coupons
    'coupons.apps.CouponsConfig',

    # ajout application de coupons
    'marketing.apps.MarketingConfig',

    # ajout de hitcoun : compteur de vues
    # 'hitcount',

    # ajout de hitcoun : compteur de vues
    # 'debug_toolbar',

    # ajout tinymce
    'tinymce',

    # ajout compressor
    'compressor',

    # ajout application de rosetta translate interface
    'rosetta',
]

# Config Django-suit
SUIT_CONFIG = {
    'ADMIN_NAME': 'e-market'
}

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]


# MIDDLEWARE_CLASSES = [
#     'debug_toolbar.middleware.DebugToolbarMiddleware',
# ]

ROOT_URLCONF = 'ecommerce.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.csrf',
                'django.contrib.messages.context_processors.messages',
                # ...
                # Processeur de contexte du panier
                'panier.context_processors.panier',
                'panier.context_processors.ecommerce',
            ],
        },
    },
]

BREADCRUMBS_HOME_LABEL = 'Home'
PANIER_SESSION_ID = 'panier'

WSGI_APPLICATION = 'ecommerce.wsgi.application'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'flavienhgs@gmail.com'
EMAIL_HOST_PASSWORD = os.environ.get('MAIL')
EMAIL_PORT = 587
EMAIL_USE_TLS = True

# argon2 settings
PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
]

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

if DEBUG:
    DATABASES = {
        'default': {
           'ENGINE': 'django.db.backends.mysql',
            'OPTIONS': {
                'read_default_file': '/etc/mysql/db_ecommerce.conf',
            }
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

# Traduction du contenu
LANGUAGES = [
    ('en', _('English')),
    ('fr', _('Francais')),
]

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale/')
]

LANGUAGE_CODE = 'fr'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# formatage des nombres avec les s√©parateurs de milliers
USE_THOUSAND_SEPARATOR = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles/')
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static/"),
    'static/',
]

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    # other finders..
    'compressor.finders.CompressorFinder',
)

COMPRESS_PRECOMPILERS = (
    ('text/coffeescript', 'coffee --compile --stdio'),
    ('text/less', 'lessc {infile} {outfile}'),
    ('text/x-sass', 'sass {infile} {outfile}'),
    ('text/x-scss', 'sass --scss {infile} {outfile}'),
    ('text/foobar', 'path.to.MyPrecompilerFilter'),
)

COMPRESS_ENABLED = False

LOGIN_REDIRECT_URL = 'accounts:profile'
LOGIN_URL = 'accounts:login'

# Configuration de l'API braintree
# https://www.braintreepayments.com/sandbox

gateway = braintree.BraintreeGateway(
    braintree.Configuration(
        environment=braintree.Environment.Sandbox,
        merchant_id=os.environ.get('MERCHAND_ID'),
        public_key=os.environ.get('PUBLIC_KEY'),
        private_key=os.environ.get('PRIVATE_KEY')
    )
)

# Configuration de redis : plugins pour proposer des articles similaires
# REDIS_HOST = 'localhost'
# REDIS_PORT = 6379
# REDIS_DB = 1

# MAILCHIMP
MAILCHIMP_API_KEY = os.environ.get('MAILCHIMP_API_KEY')
MAILCHIMP_DATA_CENTER = os.environ.get('MAILCHIMP_DATA_CENTER')
MAILCHIMP_EMAIL_LIST_ID = os.environ.get('MAILCHIMP_EMAIL_LIST_ID')
